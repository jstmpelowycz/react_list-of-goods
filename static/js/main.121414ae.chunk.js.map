{"version":3,"sources":["enums/SortType.ts","components/GoodsList/GoodsList.tsx","App.tsx","index.tsx"],"names":["SortType","GoodsList","state","isReversed","sortBy","Default","minLength","maxLength","selectedLength","handleReverseClick","setState","handleSortByLengthClick","ByLength","handleSortAlphabeticallyClick","Alphabetical","handleResetClick","handleSelectorChange","value","Number","getVisibleGoodsList","goods","props","visibleGoodsList","filter","item","length","sort","itemA","itemB","localeCompare","Error","reverse","this","ifNothingToReset","availableOptions","range","className","Button","onClick","disabled","onChange","target","map","Component","goodsFromServer","App","isButtonVisible","handleStartClick","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.121414ae.chunk.js","sourcesContent":["export enum SortType {\n  Default,\n  ByLength,\n  Alphabetical,\n}\n","import { range } from 'lodash';\nimport { Button } from 'react-bootstrap';\nimport { Component } from 'react';\nimport { SortType } from '../../enums/SortType';\n\ninterface Props {\n  goods: string[];\n}\n\ninterface State {\n  isReversed: boolean;\n  sortBy: SortType;\n  minLength: number,\n  maxLength: number,\n  selectedLength: number,\n}\n\nexport class GoodsList extends Component<Props, State> {\n  state = {\n    isReversed: false,\n    sortBy: SortType.Default,\n    minLength: 1,\n    maxLength: 10,\n    selectedLength: 1,\n  };\n\n  handleReverseClick = () => {\n    this.setState({ isReversed: true });\n  };\n\n  handleSortByLengthClick = () => {\n    this.setState({ sortBy: SortType.ByLength });\n  };\n\n  handleSortAlphabeticallyClick = () => {\n    this.setState({ sortBy: SortType.Alphabetical });\n  };\n\n  handleResetClick = () => {\n    const { minLength } = this.state;\n\n    this.setState({\n      isReversed: false,\n      sortBy: SortType.Default,\n      selectedLength: minLength,\n    });\n  };\n\n  handleSelectorChange = (value: string) => {\n    this.setState({\n      selectedLength: Number(value),\n    });\n  };\n\n  getVisibleGoodsList = () => {\n    const { goods } = this.props;\n    const { isReversed, sortBy, selectedLength } = this.state;\n\n    const visibleGoodsList = goods.filter(\n      item => item.length >= selectedLength,\n    );\n\n    visibleGoodsList.sort(\n      (itemA, itemB) => {\n        switch (sortBy) {\n          case SortType.ByLength:\n            return itemA.length - itemB.length;\n\n          case SortType.Alphabetical:\n            return itemA.localeCompare(itemB);\n\n          case SortType.Default:\n            return 0;\n\n          default:\n            throw new Error(`Error: SortType ${sortBy} is undefined`);\n        }\n      },\n    );\n\n    if (isReversed) {\n      visibleGoodsList.reverse();\n    }\n\n    return visibleGoodsList;\n  };\n\n  render() {\n    const {\n      isReversed,\n      sortBy,\n      minLength,\n      maxLength,\n      selectedLength,\n    } = this.state;\n    const {\n      handleSortByLengthClick,\n      handleSortAlphabeticallyClick,\n      handleReverseClick,\n      handleResetClick,\n      handleSelectorChange,\n      getVisibleGoodsList,\n    } = this;\n\n    const ifNothingToReset = (\n      selectedLength === minLength\n      && sortBy === SortType.Default\n      && !isReversed\n    );\n\n    const availableOptions: number[]\n      = range(minLength, maxLength + 1);\n\n    return (\n      <div className=\"GoodsList\">\n        <div className=\"GoodsList__controllers\">\n          <Button\n            className=\"GoodsList__button\"\n            onClick={handleSortByLengthClick}\n            disabled={sortBy === SortType.ByLength}\n          >\n            Sort by length\n          </Button>\n\n          <Button\n            className=\"GoodsList__button\"\n            onClick={handleSortAlphabeticallyClick}\n            disabled={sortBy === SortType.Alphabetical}\n          >\n            Sort alphabetically\n          </Button>\n\n          <Button\n            className=\"GoodsList__button\"\n            onClick={handleResetClick}\n            disabled={ifNothingToReset}\n          >\n            Reset\n          </Button>\n\n          <Button\n            className=\"GoodsList__button\"\n            onClick={handleReverseClick}\n            disabled={isReversed}\n          >\n            Reverse\n          </Button>\n\n          <div className=\"GoodsList__selector\">\n            <span className=\"GoodsList__selector-label\">\n              Length\n            </span>\n\n            <select\n              className=\"GoodsList__selector-select\"\n              value={selectedLength}\n              onChange={({ target }) => {\n                handleSelectorChange(target.value);\n              }}\n            >\n              {availableOptions.map(item => (\n                <option\n                  className=\"GoodsList__selector-item\"\n                  key={`length-${item}`}\n                  value={item}\n                >\n                  {item}\n                </option>\n              ))}\n            </select>\n          </div>\n        </div>\n\n        <ul className=\"GoodsList__list\">\n          {getVisibleGoodsList().map(item => (\n            <li\n              className=\"GoodsList__list-item\"\n              key={item}\n            >\n              {item}\n            </li>\n          ))}\n        </ul>\n      </div>\n    );\n  }\n}\n","import './styles/App.scss';\nimport { Button } from 'react-bootstrap';\nimport { Component } from 'react';\nimport { GoodsList } from './components/GoodsList';\n\nconst goodsFromServer: string[] = [\n  'Dumplings',\n  'Carrot',\n  'Eggs',\n  'Ice cream',\n  'Apple',\n  'Bread',\n  'Fish',\n  'Honey',\n  'Jam',\n  'Garlic',\n];\n\ninterface State {\n  isButtonVisible: boolean;\n}\n\nexport class App extends Component<{}, State> {\n  state = {\n    isButtonVisible: true,\n  };\n\n  handleStartClick = () => {\n    this.setState({ isButtonVisible: false });\n  };\n\n  render() {\n    const { isButtonVisible } = this.state;\n\n    return (\n      <div className=\"App\">\n        {isButtonVisible\n          ? (\n            <Button\n              className=\"App__startButton\"\n              onClick={this.handleStartClick}\n            >\n              Start\n            </Button>\n          ) : (\n            <div className=\"App__goodsList\">\n              <GoodsList goods={goodsFromServer} />\n            </div>\n          )}\n      </div>\n    );\n  }\n}\n","import 'bootstrap/dist/css/bootstrap.min.css';\nimport ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}